name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release.md
        run: |
          tags=($(git tag --merged $(git rev-parse HEAD) --sort=-creatordate))
          preTag=$(curl --silent "https://api.github.com/repos/WXies-Team/Analysis-Tool-For-HyperOS/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")' || echo "")
          currentTag=""
          for ((i = 0; i <= ${#tags[@]}; i++)); do
            if (( i < ${#tags[@]} )); then
              tag=${tags[$i]}
            else
              tag=""
            fi
            if [ -n "$currentTag" ]; then
              if [ "$(echo -e "$currentTag\n$preTag" | sort -V | head -n 1)" == "$currentTag" ]; then
                break
              fi
            fi
            if [ -n "$currentTag" ]; then
              if [ -n "$tag" ]; then
                git log --pretty=format:"%B" "$tag..$currentTag" | awk 'NF {print "- " $0} !NF {print ""}' >> release.md
              else
                git log --pretty=format:"%B" "$currentTag" | awk 'NF {print "- " $0} !NF {print ""}' >> release.md
              fi
              echo "" >> release.md
            fi
            currentTag=$tag
          done

      - name: Checkout code into separate directory
        uses: actions/checkout@v4
        with:
          path: 'repo'

      - name: Process
        run: |
          sanitized_ref=$(echo "${GITHUB_REF}" | sed 's/refs\/tags\///g')
          mkdir -p ./output
          mkdir -p "./Windows-x86_64/tools"
          mkdir -p "./Linux-arm64/tools"
          mkdir -p "./Linux-x86_64/tools"
          mkdir -p "./Darwin-arm64/tools"
          mkdir -p "./Darwin-x86_64/tools"
          
          # 递归复制目录
          cp -r ./repo/* "./Windows-x86_64/"
          cp -r ./repo/* "./Linux-arm64/"
          cp -r ./repo/* "./Linux-x86_64/"
          cp -r ./repo/* "./Darwin-arm64/"
          cp -r ./repo/* "./Darwin-x86_64/"

      - name: Download payload dumper go
        uses: robinraju/release-downloader@v1.10
        with:
          repository: "ssut/payload-dumper-go"
          latest: true
          fileName: "payload-dumper-go_*_linux_amd64.tar.gz"

      - name: Download erofs-utils
        uses: robinraju/release-downloader@v1.10
        with:
          repository: "sekaiacg/erofs-utils"
          latest: true
          fileName: "erofs-utils-*-Linux_x86_64-*.zip"

      - name: Unzip and extract files
        run: |
          for file in *; do
            case "$file" in
              *.zip)
                unzip -j "$file" "extract.erofs" -d "./Linux-x86_64/tools"
                ;;
              *.tar.gz)
                tar -xvzf "$file" "payload-dumper-go" -C "./Linux-x86_64/tools"
                ;;
            esac
          done

          zip -r "./Linux-x86_64.zip" "./Linux-x86_64/"
          mv "./Linux-x86_64.zip" output/

      - name: Release
        if: ${{ !contains(github.ref, 'beta') }}
        uses: softprops/action-gh-release@v2
        with:
          body_path: './release.md'
          files: ./output/*
          token: ${{ secrets.GITHUB_TOKEN }}